// Auto-generated by the Load Impact converter

import "./libs/shim/core.js";

export let options = { maxRedirects: 4,   stages: [
  { duration: '2m', target: 50 }, // below normal load
  { duration: '5m', target: 50 },
  { duration: '2m', target: 70 }, // normal load
  { duration: '5m', target: 70 },
  { duration: '2m', target: 100 }, // around the breaking point
  { duration: '5m', target: 100 },
  { duration: '2m', target: 200 }, // beyond the breaking point
  { duration: '5m', target: 200 },
  { duration: '10m', target: 0 }, // scale down. Recovery stage.
] };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    token: "",
    server: "http://10.0.0.50:8080",
    realm: "master",
    grantType: "client_credentials",
    clientId: "test",
    clientSecret: "9dc03e84-6f43-4616-a24c-6cf9a54aabe2"
  }
});

export default function() {
  postman[Pre].push(() => {
    if (pm.variables.get("token") === undefined) {
      var url = `${pm.variables.get("server")}/auth/realms/${pm.variables.get(
        "realm"
      )}/protocol/openid-connect/token`;

      var payload = {
        grant_type: pm.variables.get("grantType"),
        client_id: pm.variables.get("clientId"),
        client_secret: pm.variables.get("clientSecret")
      };

      var params = {
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        }
      };

      var kcResult = http.post(url, payload, params);
      var jsonResult = JSON.parse(kcResult.body);
      pm.environment.set("token", jsonResult.access_token);
    }
  });

  postman[Request]({
    name: "GET - TothNET",
    id: "086259cb-e9c0-4b9f-bc7d-79000838a2aa",
    method: "GET",
    address: "https://www.tothnet.hu/",
    data: {},
    headers: {
      "Content-Type": "application/x-www-form-urlencoded"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("token")}`;
    }
  });

  postman[Pre].pop();
}
import http from 'k6/http'; 
